description: |
  HPAScalingRules configures the scaling behavior for one direction
  via scaling Policy Rules and a configurable metric tolerance.

  Scaling policy rules are applied after calculating `desiredReplicas` from metrics for the HPA.
  They can limit the scaling velocity by specifying scaling policies.
  They can prevent flapping by specifying the stabilization window,
  so that the number of replicas is not set instantly, instead,
  the safest value from the stabilization window is chosen.

  The tolerance is applied to the metric values and prevents scaling too eagerly for small metric variations.
  Setting a tolerance requires enabling the alpha HPAConfigurableTolerance feature gate.
x-kab-description-zh: |
  HPAScalingRules 使用扩缩策略规则和一个可配置的度量值容忍度值来配置某个方向上的扩缩行为。

  扩缩策略规则是在基于度量值为 HPA 计算了 `desiredReplicas` 之后应用的。
  通过指定扩缩规则，可以控制 HPA 的扩缩速度。
  通过指定稳定窗口，可以避免 HPA 规则的抖动现象，HPA 中副本的个数不是立即生效的，
  而是从稳定窗口中选择最安全的值。

  通过向度量值应用容忍度规则，可以避免因为度量值的小幅波动而急迫地执行扩缩动作。
  设置容忍度需要启用 `HPAConfigurableTolerance` 特性门控（Alpha 阶段）。
properties:
  policies:
    description: |
      A list of potential scaling polices which can be used during scaling.
      If not set, use the default values,

      - For scale up, allow doubling the number of Pods, or an absolute change of 4 Pods in a 15s window.
      - For scale down, allow all pods to be removed in a 15s window.
    x-kab-description-zh: |
      字段值为一个在扩缩操作期间可以使用的扩缩策略。如果未指定，默认的行为如下：

      - 对于规模提升，允许 Pod 个数翻倍，或者每 15 秒钟的窗口中增加 4 个 Pod；
      - 对于规模缩减，允许在 15 秒的窗口中移除所有 Pod。
    items:
      $ref: '#/definitions/io.k8s.api.autoscaling.v2.HPAScalingPolicy'
    minItems: 1
    type: array
    x-kubernetes-list-type: atomic
  selectPolicy:
    default: Max
    description: "This is used to specify the policy to use.\n\n- `\"Max\"` means
      selecting the policy with the highest possible change.\n- `\"Min\"` means selecting
      the policy with the lowest possible change.\n"
    enum:
      - Max
      - Min
    type: string
  stabilizationWindowSeconds:
    description: The number of seconds after which recommendations are to be considered
      while scaling up or scaling down. For scaling up, the default value is 0 (i.e.,
      no stabilization is done); for scale down, the default value is 300 (i.e., the
      stabilization window is 300 seconds long).
    format: int32
    maximum: 3600
    minimum: 0
    type: integer
  tolerance:
    $ref: "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
    description: |
      The tolerance on the ratio between the current and desired metric value
      under which no updates are made to the desired number of replicas (e.g. 0.01 for 1%).
      Must be greater than or equal to zero.
      If not set, the default cluster-wide tolerance is applied (by default 10%).

      For example, if autoscaling is configured with a memory consumption target of 100Mi,
      and scale-down and scale-up tolerances of 5% and 1% respectively,
      scaling will be triggered when the actual consumption falls below 95Mi or exceeds 101Mi.

      This is an alpha field and requires enabling the HPAConfigurableTolerance feature gate.
    x-kab-description-zh: |
      容忍度是当前度量值与期望度量值之间的比值，在给定的比率（如 0.01 表示 1%）之下时，
      系统不会变更 HPA 的期望副本个数。
      此字段值必须是大于等于 0 的数值。
      如果未指定，则使用默认的集群范围容忍度（10%）。

      例如，某个自动扩缩 Pod 集合设置内存用量目标为 100Mi 字节，并且其缩减和扩张的容忍度分别设置为 5% 和 1%，
      只有内存用量低于 95Mi 字节或者超过 101Mi 字节时，扩缩动作才会被触发。

      此字段为 Alpha 阶段，需要启用 `HPAConfigurableTolerance` 特性门控。
type: object

