{
  "description": "A ServiceAccount binds together a name understood by users and perhaps by peripheral systems for an identity, a principal that can be authenticated and authorized and a set of secrets",
  "properties": {
    "apiVersion": {
      "description": "The version of the schema for the object representation",
      "enum": [
        "v1"
      ],
      "type": "string"
    },
    "automountServiceAccountToken": {
      "description": "Flag indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.",
      "type": "boolean"
    },
    "imagePullSecrets": {
      "description": "A list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      },
      "type": "array"
    },
    "kind": {
      "description": "A string value representing the REST resource",
      "enum": [
        "ServiceAccount"
      ],
      "type": "string"
    },
    "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.GET",
      "description": "Standard object's metadata. The name must be a valid DNS subdomain name."
    },
    "secrets": {
      "description": "A list of secrets allowed to be used by pods running using this ServiceAccount.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
      },
      "type": "array",
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "",
      "kind": "ServiceAccount",
      "version": "v1"
    }
  ]
}