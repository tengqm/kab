{
  "description": "A ServiceAccount binds together a name understood by users and perhaps by peripheral systems for an identity, a principal that can be authenticated and authorized and a set of secrets",
  "properties": {
    "apiVersion": {
      "description": "The version of the schema for the object representation",
      "enum": [
        "v1"
      ],
      "type": "string"
    },
    "automountServiceAccountToken": {
      "description": "Flag indicating whether Pods running as this ServiceAccount should have an API token automatically mounted. Can be overridden at the Pod level.",
      "type": "boolean"
    },
    "imagePullSecrets": {
      "description": "A list of references to Secrets in the same namespace for pulling images for Pods that reference this ServiceAccount. Image pull Secrets are distinct from Secrets because Secrets can be mounted in the Pod, but image pull Secrets are only accessed by the kubelet.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      },
      "type": "array"
    },
    "kind": {
      "description": "A string value representing the REST resource",
      "enum": [
        "ServiceAccount"
      ],
      "type": "string"
    },
    "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.CREATE",
      "description": "Standard object metadata. The name must be a valid DNS subdomain name."
    },
    "secrets": {
      "description": "A list of the Secrets in the same namespace that Pods running using this ServiceAccount are allowed to use. Pods are only limited to this list if this service account has a \"kubernetes.io/enforce-mountable-secrets\" annotation set to \"true\". This field should not be used to find auto-generated service account token Secrets for use outside of Pods. Instead, tokens can be requested directly using the TokenRequest API, or service account token Secrets can be manually created.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
      },
      "type": "array",
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "metadata"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "",
      "kind": "ServiceAccount",
      "version": "v1"
    }
  ]
}
