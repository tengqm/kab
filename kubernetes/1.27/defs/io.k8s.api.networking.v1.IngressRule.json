{
  "description": "A rule mapping the paths under a specified `host` to the related backend Services. Incoming requests are first evaluated for a `host` match, then routed to the backend associated with the matching `http` backend.",
  "properties": {
    "host": {
      "description": "The fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986:\n\n1. IPs are not allowed. Currently an entry in the `http` list can only apply to the IP in the `spec` of the parent Ingress.\n\n1. The `':'` delimiter is not respected because ports are not allowed. The port of an Ingress is implicitly 80 for HTTP and 443 for HTTPS.\n\nBoth may change in the future. Incoming requests are matched against the `host` before the `http`. If the `host` is unspecified, the Ingress routes all traffic based on the specified `http` backend. Host can be *precise* which is a domain name without the terminating dot of a network host (e.g. `\"foo.bar.com\"`) or *wildcard*, which is a domain name prefixed with a single wildcard label (e.g. `\"*.foo.com\"`). The wildcard character `'*'` must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. `host == \"*\"`). Requests will be matched against the `host` field in the following way:\n\n1. If `host` is precise, the request matches this rule if the HTTP `\"host\"` header is equal to `host` value.\n\n2. If `host` value is a wildcard, then the request matches this rule if the HTTP `\"host\"` header is to equal to the suffix (removing the first label) of the wildcard rule.",
      "type": "string"
    },
    "http": {
      "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue"
    }
  },
  "type": "object"
}
