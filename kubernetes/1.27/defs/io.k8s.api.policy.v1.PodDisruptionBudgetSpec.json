{
  "description": "Specification for a PodDisruptionBudget.",
  "properties": {
    "maxUnavailable": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
      "description": "An eviction is allowed if at most `maxUnavailable` Pods selected by `selector` are unavailable after the eviction, i.e. even in absence of the evicted Pod. The valid value is an integer or a percentage string. A percentage value can be no more than `\"100%\"`. One can prevent all voluntary evictions by specifying `0`. This is a mutually exclusive setting with `minAvailable`."
    },
    "minAvailable": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
      "description": "An eviction is allowed if at least `minAvailable` Pods selected by `selector` will still be available after the eviction, i.e. even in the absence of the evicted Pod. The valid value is an integer or a percentage string. A percentage can be no more than `\"100%\"`. You can prevent all voluntary evictions by specifying `\"100%\"`."
    },
    "selector": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "Label query over Pods whose evictions are managed by the disruption budget. A null selector selects no Pods, while an empty (`{}`) selector will select all Pods within the namespace.",
      "x-kubernetes-patch-strategy": "replace"
    },
    "unhealthyPodEvictionPolicy": {
      "description": "This defines the criteria for when unhealthy Pods should be considered for eviction. Current implementation considers healthy Pods, as Pods that have `status.conditions` item with `type=\"Ready\",status=\"True\"`.\n\nValid policies are \"`IfHealthyBudget`\" and \"`AlwaysAllow`\". If no policy is specified, the default behavior will be used, which corresponds to the \"`IfHealthyBudget`\" policy.\n\n\"`IfHealthyBudget`\" policy means that running Pods (`status.phase=\"Running\"`), but not yet healthy can be evicted only if the guarded application is not disrupted (`status.currentHealthy` is at least equal to `status.desiredHealthy`). Healthy Pods will be subject to the PDB for eviction.\n\n\"`AlwaysAllow`\" policy means that all running Pods (`status.phase=\"Running\"`), but not yet healthy are considered disrupted and can be evicted regardless of whether the criteria in a PDB is met. This means perspective running Pods of a disrupted application might not get a chance to become healthy. Healthy Pods will be subject to the PDB for eviction.\n\nAdditional policies may be added in the future. Clients making eviction decisions should disallow eviction of unhealthy Pods if they encounter an unrecognized policy in this field.\n\nThis field is Beta-level. The eviction API uses this field when the feature gate `PDBUnhealthyPodEvictionPolicy` is enabled (enabled by default).",
      "enum": [
        "AlwaysAllow",
        "IfHealthyBudget"
      ],
      "type": "string"
    }
  },
  "type": "object"
}
