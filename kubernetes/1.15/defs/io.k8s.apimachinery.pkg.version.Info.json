{
  "description": "Info contains versioning information. how we'll want to distribute that information.",
  "properties": {
    "buildDate": {
      "description": "Build date in ISO8601 format. It is the output of `date -u +'%Y-%m-%dT%H:%M:%SZ'`",
      "minLength": 1,
      "type": "string"
    },
    "compiler": {
      "description": "The compiler used as reported by GoLang `runtime.Compiler`.",
      "minLength": 1,
      "type": "string"
    },
    "gitCommit": {
      "description": "Set when building the binary by scripts. The content is the git HEAD hash code when build.",
      "minLength": 1,
      "type": "string"
    },
    "gitTreeState": {
      "description": "State of the git tree. Either `\"clean\"` or `\"dirtry\"`.",
      "minLength": 1,
      "type": "string"
    },
    "gitVersion": {
      "description": "Git tag name used for a release. E.g. `\"1.17\"`.",
      "minLength": 1,
      "type": "string"
    },
    "goVersion": {
      "description": "The GoLang version as returned by `runtime.Version()`.",
      "minLength": 1,
      "type": "string"
    },
    "major": {
      "description": "Major version. Always numeric.",
      "minLength": 1,
      "type": "string"
    },
    "minor": {
      "description": "Minor version. Always numeric.",
      "minLength": 1,
      "type": "string"
    },
    "platform": {
      "description": "Platform for the binary. It is of format `\"<OS>/<ARCH>\"`, where `\"<OS>\"` is the operating system name as returned by `runtime.GOOS` and `\"<ARCH>\"` is the architecture as returned by `runtime.GOARCH`.",
      "minLength": 1,
      "type": "string"
    }
  },
  "required": [
    "buildDate",
    "compiler",
    "gitVersion",
    "gitCommit",
    "gitTreeState",
    "goVersion",
    "major",
    "minor",
    "platform"
  ],
  "type": "object"
}
