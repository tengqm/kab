{
  "description": "The information for connecting to a webhook. One and only one of `service` and `url` should be provided. If the webhook is running within the cluster, then you should use `service`.",
  "properties": {
    "caBundle": {
      "description": "A PEM encoded CA bundle that is used to validate the webhook's server certificate. If unspecified, system trust roots on the API server are used.",
      "format": "byte",
      "type": "string"
    },
    "service": {
      "$ref": "#/definitions/io.k8s.api.auditregistration.v1alpha1.ServiceReference",
      "description": "A reference to the Service for this webhook."
    },
    "url": {
      "description": "The location of the webhook, in standard URL form (`\"scheme://host:port/path\"`). The `host` should not refer to a Service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some API servers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address. Please note that using `\"localhost\"` or `\"127.0.0.1\"` as a `host` is risky unless you take great care to run this webhook on all hosts which run an API server which might need to call this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster. The scheme must be `\"https\"`. A `path` is optional, and if present may be any string permissible in a URL. You may use the `path` to pass an arbitrary string to the webhook, for example, a cluster identifier. Attempting to use a user or basic auth e.g. `\"user:password@\"` is not allowed. Fragments (`\"#...\"`) and query parameters (`\"?...\"`) are not allowed either.",
      "type": "string"
    }
  },
  "type": "object"
}
