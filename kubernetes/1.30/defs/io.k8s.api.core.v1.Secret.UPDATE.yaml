description: |
  Secret holds secret data of a certain type.
  The total bytes of the values in the `data` or `stringData` field must be less than 1MB.
x-kab-description-zh: |
properties:
  apiVersion:
    description: The version of the schema for the object representation.
    x-kab-description-zh: 对象表示模式的版本。
    enum:
      - v1
    type: string
  data:
    additionalProperties:
      format: byte
      type: string
    description: |
      The secret data. Each key must consist of alphanumeric characters, `'-'`, `'_'` or `'.'`.
      The serialized form of the Secret data is a [base64](https://tools.ietf.org/html/rfc4648#section-4)
      encoded string, representing the arbitrary (possibly non-string) data value here.
    x-kab-description-zh: |
      秘密数据字典。其中的每个主键必须由字母、数字、`'-'`、`'_'` 或 `'.'` 构成。
      Secret 数据的序列化形式是一个以 [base64](https://tools.ietf.org/html/rfc4648#section-4)
      格式编码的字符串，代表的是这里保存的任意（可能并不一定是字符串）数据值。
    type: object
  immutable:
    description: |
      If set to `true`, ensures that data stored in the Secret cannot be updated
      (only `metadata` can be modified).
      If not set to `true`, the field can be modified at any time. Defaulted to nil.
    x-kab-description-zh: |
      此字段设置为 `true` 时能够保证 Secret 中保存的数据不被变更（只可变更 `metadata`）。
      如果此字段未被设置为 `true`，则 Secret 中的字段可以在任何时候变更。
      默认值为 nil。
    type: boolean
  kind:
    description: A string value representing the REST resource.
    x-kab-description-zh: 代表 REST 资源的字符串值。
    enum:
      - Secret
    type: string
  metadata:
    $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.UPDATE'
    description: |
      Standard object metadata. The Secret name must be a valid DNS subdomain value.
      Note that some Secret types may have additional requirements on the `annotations`
      or assumptions on the Secret name.
    x-kab-description-zh: |
      标准的对象元数据。Secret 的名字必须是一个合法的 DNS 子域名。
      注意某些 Secret 类型可能对 `annotations` 字段有额外的要求，或者对 Secret 名字有额外的规定。
  stringData:
    additionalProperties:
      type: string
    description: |
      The `stringData` field allows for specifying non-binary Secret data in string form.
      It is provided as a write-only input field for convenience.
      All keys and values are merged into the `data` field on write, overwriting any existing values.
      The `stringData` field is never output when reading from the API.
    x-kab-description-zh: |
      `stringData` 字段允许以字符串的形式输入非二进制的 Secret 数据。
      提供这一只能写的输入字段是为了方便用户使用。
      此字段中的所有键、值都会在保存的时候合并到 `data` 字段中，且覆盖其中已有的值。
      从 API 返回时，对象不会包含 `stringData` 字段。
    type: object
  type:
    default: Opaque
    description: |
      Used to facilitate programmatic handling of secret data.
      The `type` field can take one of the following builtin values.
      You can add your own type as well.
      - `"Opaque"` (default): arbitrary user-defined data.
      - `"kubernetes.io/service-account-token"`: a token that identifies a service acccount.
        This type requires that the `"kubernetes.io/service-account.name"` annotation set to
        an existing service account name and the `data.token` field set to the token content.
      - `"kubernetes.io/dockercfg"`: reserved for a serialized `"~/.dockercfg"` file.
        This type requires that the `data` field contains a `.dockercfg` key for the config content.
      - `"kubernetes.io/dockerconfigjson"`: reserved for serialized JSON data that follows the
        same format rules as the `"~/.docker/config.json"` file. This type requires that the
        `data` field contains a `.dockerconfigjson` key for the config data.
      - `"kubernetes.io/basic-auth"`: a builtin type for storing credentials needed for basic
        authentication. This type requires the `data` field contains the `username` and `password`
        key for user name and password (or token) for authentication, respectively.
      - `"kubernetes.io/ssh-auth"`: reserved for data used in SSH authentication.
        This type requires that the `data` field contains a `ssh-privatekey` key as the SSH credential
        to use.
      - `"kubernetes.io/tls"`: reserved to store information about a TLS client or server.
        It is primarily used with TLS termination of the Ingress resource, but may be used
        in other types. This type requires the settings of the `tls.key` and the `tls.crt` keys
        in the `data` field, although the server doesn't actually validate the contents.
      - `"bootstrap.kubernetes.io/token"`: reserved for tokens used during the bootstrap process
        for a node. It stores tokens used to sign well known ConfigMaps.
        This type of a Secret is usually created in the `"kube-system"` namespace and named as
        `"bootstrap-token-<token-id>"`.

      A Secret of bootstrap token type has the following keys specified under `data`:
      - `"token_id"`: A random 6 character string as the token identifier. Required.
      - `"token-secret"`: A random 16 character string as the actual token secret. Required.
      - `"description"`: A human-readable string that describes what the token is used for. Optional.
      - `"expiration"`: An absolute UTC time using RFC3339 specifying when the token should be expired.
        Optional.
      - `"usage-bootstrap-<usage>"`: A boolean flag  indicating additional usage for the bootstrap token.
      - `"auth-extra-groups"`: A comma-separated list of group names that will be authenticated as
        in addition to `"system:bootstrappers"` group.

    x-kab-description-zh: |
      用于方便对 Secret 中的数据进行编程处理。`type` 字段可以取以下内置的类型值之一。
      用户也可添加自己的类型。

      - `"Opaque"`（默认）：用户定义的任意数据。
      - `"kubernetes.io/service-account-token"`：一个用来标识某服务账号（ServiceAccount）的令牌。
        此类型的 Secret 要求设置 `"kubernetes.io/service-account.name"` 注解为现有 ServiceAccount
        的名字，并且 `.data.token` 字段中保存令牌的内容。
      - `"kubernetes.io/dockercfg"`：预留给序列化的 `"~/.dockercfg"` 文件。
        此类型的 Secret 要求 `data` 中包含 `.dockercfg` 键，其中保存配置数据内容。
      - `"kubernetes.io/dockerconfigjson"`：预留类型值，用来保存序列化的 JSON 数据。数据的格式遵从与
        `"~/.docker/config.json"` 文件相同的规则。此类型的 Secret 对象要求在 `data` 字段中包含
        `.dockerconfigjson` 键，其中保存配置数据。
      - `"kubernetes.io/basic-auth"`：内置的用来保存基本身份认证所需要的凭据数据。此类型的
        Secret 对象的 `data` 字段需要包含 `username` 和 `password` 主键，
        分别对应身份认证所需要的用户名和密码（或令牌）。
      - `"kubernetes.io/ssh-auth"`：预留的用于 SSH 身份认证的类型。此类型的 Secret 对象要求在
        `data` 字段中包含 `ssh-privatekey` 主键，作为要使用的 SSH 凭据。
      - `"kubernetes.io/tls"`：预留的类型，用来保存 TLS 客户端或服务器端的信息。此字段目前主要用于
        Ingress 资源，执行 TLS 终结操作。不过也可以用于其他场景。
        这种类型的 Secret 对象要求在 `data` 中设置 `tls.key` 和 `tls.crt` 主键，
        尽管服务器端并不会对其内容做正确性检查。
      - `"bootstrap.kubernetes.io/token"`：预留给节点的一种类型，用于节点的启动引导过程。
        其中保存的是用来对某个众所周知的 ConfigMap 进行签名的令牌。此类型的 Secret 通常被创建于
        `"kube-system"` 名字空间内，并且命名为 `"bootstrap-token-<令牌 ID>"`。

      启动引导令牌类型的 Secret 要求在 `data` 中存在以下主键：
      - `"token_id"`：一个作为令牌标识符使用的随机字符串，长度为 6 字符。必须存在。
      - `"token-secret"`：一个长度为 16 的随机字符串，用作实际的令牌秘密数据。必须存在。
      - `"description"`：一个用来描述令牌用途的人类刻度字符串。可选。
      - `"expiration"`：一个 RFC-3339 格式的 UTC 时间戳字符串，给出令牌到期时间。可选。
      - `"usage-bootstrap-<usage>"`：一个布尔值标记，给出启动引导令牌的额外用途。可选。
      - `"auth-extra-groups"`：用逗号分隔开的组名列表，请求者被身份认证时，除了属于
        `"system:bootstrappers"` 用户组之外，也属于这里给出的用户组。

    enum:
      - bootstrap.kubernetes.io/token
      - kubernetes.io/service-account-token
      - kubernetes.io/dockercfg
      - kubernetes.io/dockerconfigjson
      - kubernetes.io/basic-auth
      - kubernetes.io/ssh-auth
      - kubernetes.io/tls
      - Opaque
    type: string
required:
  - apiVersion
  - kind
  - metadata
type: object
x-kubernetes-group-version-kind:
  - group: ''
    kind: Secret
    version: v1

