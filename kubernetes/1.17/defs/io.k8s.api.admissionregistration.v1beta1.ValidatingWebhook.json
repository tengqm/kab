{
  "description": "An admission webhook and the resources and operations it applies to.",
  "properties": {
    "admissionReviewVersions": {
      "default": [
        "v1beta1"
      ],
      "description": "An ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "clientConfig": {
      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig",
      "description": "Information for communicating with the webhook."
    },
    "failurePolicy": {
      "default": "Ignore",
      "description": "How unrecognized errors from the admission endpoint are handled.",
      "enum": [
        "Fail",
        "Ignore"
      ],
      "type": "string"
    },
    "matchPolicy": {
      "default": "Exact",
      "description": "How the `rules` list is used to match incoming requests.\n\n- \"`Exact`\": matching a request only if it exactly matches a specified rule. For example, if deployments can be modified via \"`apps/v1`\", \"`apps/v1beta1`\", and \"`extensions/v1beta1`\", but `rules` only included \"`apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`\", a request to \"`apps/v1beta1`\" or \"`extensions/v1beta1`\" would not be sent to the webhook.\n- \"`Equivalent`\": matching a request if modifies a resource listed in `rules`, even via another API group or version. For example, if deployments can be modified via \"`apps/v1`\", \"`apps/v1beta1`\", and \"`extensions/v1beta1`\", and `rules` only included \"`apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`\", a request to \"`apps/v1beta1`\" or \"`extensions/v1beta1`\" would be converted to \"`apps/v1`\" and sent to the webhook.",
      "enum": [
        "Equivalent",
        "Exact"
      ],
      "type": "string"
    },
    "name": {
      "description": "The name of the admission webhook. Name should be fully qualified, e.g., '`imagepolicy.kubernetes.io`', where '`imagepolicy`' is the name of the webhook, and '`kubernetes.io`' is the name of the organization.",
      "minLength": 1,
      "type": "string"
    },
    "namespaceSelector": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "This decides whether to run the webhook on an object based on the match between the object namespace and the selector. If the object itself is a namespace, the matching is performed on `object.metadata.labels`. If the object is another cluster scoped resource, it never skips the webhook. For example, to run the webhook on any objects whose namespace is not associated with `runlevel` of `\"0\"` or `\"1\"`;  you will set the selector as follows:\n\n```\n\"namespaceSelector\": {\n  \"matchExpressions\": [{\n    \"key\": \"runlevel\",\n    \"operator\": \"NotIn\",\n    \"values\": [\"0\", \"1\"]\n  }]\n}\n```\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\", you will set the selector as follows:\n\n```\n\"namespaceSelector\": {\n  \"matchExpressions\": [{\n    \"key\": \"environment\",\n    \"operator\": \"In\",\n    \"values\": [\"prod\", \"staging\"]\n  }]\n}\n```\n\nDefault to the empty label selector, which matches everything."
    },
    "objectSelector": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "This decides whether to run the webhook based on if the object has matching labels. `objectSelector` is evaluated against both the `oldObject` and `newObject` that would be sent to the webhook, and is considered to match if either object matches the selector. A `null` object (`oldObject` in the case of create, or `newObject` in the case of delete) or an object that cannot have labels (like a `DeploymentRollback` or a `PodProxyOptions` object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty Label selector, which matches everything."
    },
    "rules": {
      "description": "What operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches **any** entry defined in the `rules` list. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.RuleWithOperations"
      },
      "type": "array"
    },
    "sideEffects": {
      "description": "Whether this webhook has side effects. Webhooks with side effects **MUST** implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the `dryRun` attribute will be auto-rejected if they match a webhook with `sideEffects` of `\"Unknown\"` or `\"Some\"`.",
      "enum": [
        "None",
        "NoneOnDryRun",
        "Some",
        "Unknown"
      ],
      "type": "string"
    },
    "timeoutSeconds": {
      "default": 30,
      "description": "The timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the `failurePolicy`.",
      "format": "int32",
      "maximum": 30,
      "minimum": 1,
      "type": "integer"
    }
  },
  "required": [
    "clientConfig",
    "name",
    "sideEffects"
  ],
  "type": "object"
}
