{
  "description": "How to spread matching Pods among the given topology.",
  "properties": {
    "labelSelector": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "Label selector used to find matching Pods. Pods that match this label selector are counted to determine the number of Pods in their corresponding topology domain."
    },
    "maxSkew": {
      "default": 1,
      "description": "The degree to which Pods may be unevenly distributed. It's the maximum permitted difference between the number of matching Pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, `maxSkew` is set to 1, and Pods with the same `labelSelector` spread as '1/1/0'. If `maxSkew` is 1, incoming Pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1 would make the actual skew (2-0) on zone1 violate `maxSkew(1)`. If `maxSkew` is 2, incoming Pod can be scheduled onto any zone.",
      "format": "int32",
      "minimum": 1,
      "type": "integer"
    },
    "topologyKey": {
      "description": "The key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each 'key, value' as a bucket, and try to put balanced number of Pods into each bucket.",
      "type": "string"
    },
    "whenUnsatisfiable": {
      "default": "DoNotSchedule",
      "description": "This indicates how to deal with a Pod if it doesn't satisfy the spread constraint. '`DoNotSchedule`' tells the scheduler not to schedule it, '`ScheduleAnyway`' tells the scheduler to still schedule it. It's considered as 'Unsatisfiable' if and only if placing incoming Pod on any topology violates 'MaxSkew'. For example, in a 3-zone cluster, `maxSkew` is set to 1, and Pods with the same `labelSelector` spread as '3/1/1'. If `whenUnsatisfiable` is set to '`DoNotSchedule`', incoming Pod can only be scheduled to zone2 or zone3. In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced.",
      "enum": [
        "DoNotSchedule",
        "ScheduleAnyway"
      ],
      "type": "string"
    }
  },
  "required": [
    "maxSkew",
    "topologyKey",
    "whenUnsatisfiable"
  ],
  "type": "object"
}