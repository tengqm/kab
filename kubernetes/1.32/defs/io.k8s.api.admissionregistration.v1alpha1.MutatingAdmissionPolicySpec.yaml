description: MutatingAdmissionPolicySpec is the specification of the desired behavior of the admission policy.
x-kab-description-zh: MutatingAdmissionPolicySpec 是对准入策略的预期行为的规约。
properties:
  failurePolicy:
    default: Fail
    description: |-
      `failurePolicy` defines how to handle failures for the admission policy.
      Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.

      A policy is invalid if `paramKind` refers to a non-existent Kind. A binding is invalid if `paramRef.name` refers to a non-existent resource.
      `failurePolicy` does not define how validations that evaluate to false are handled.
    x-kab-description-zh: |-
      `failurePolicy` 定义如何为准入策略处理失败情况。
      当 CEL 表达式出现解析错误、类型检查错误、运行时错误，或者策略定义、绑定定义中出现错误配置时，就会实现失败的情况。

      如果 `paramKind` 引用的是不存在的资源类别，则策略是非法的。如果 `paramRef.name` 所引用的是不存在的资源，则绑定是非法的。
      `failurePolicy` 并不定义合法性检查未通过时应如何处理。
    enum:
      - Faile
      - Ignore
    type: string
  matchConditions:
    description: |-
      `matchConditions` is a list of conditions that must be met for a request to be validated.
      Match conditions filter requests that have already been matched by the `matchConstraints`.
      An empty list of `matchConditions` matches all requests.

      If a parameter object is provided, it can be accessed via the `params` handle in the same manner as validation expressions.

      The exact matching logic is (in order),

      1. If ANY `matchCondition` evaluates to FALSE, the policy is skipped.
      1. If ALL `matchCondition` evaluate to TRUE, the policy is evaluated.
      1. If any `matchCondition` evaluates to an error (but none are FALSE)
         - If `failurePolicy=Fail`, reject the request
         - If `failurePolicy=Ignore`, the policy is skipped
    x-kab-description-zh: |-
      `matchConditions` 包含一组条件，只有请求满足其中所有条件时才能通过合法性检查。
      匹配条件能够对已经用 `matchConstraints` 匹配过的请求作进一步的过滤。
      如果 `matchConditions` 列表为空，则匹配所有请求。

      如果提供了一个参数对象，则可以像合法性检查表达式一样使用 `params` 来访问该对象。

      匹配的实际逻辑如下（按顺序）：

      1. 如果 `matchConditions` 中任何一个条件评估结果为 FALSE，则对应的策略被略过；
      1. 如果 `matchCOnditions` 中所有条件得评估结果都是 TRUE，则会对策略进行评估；
      1. 如果任一 `matchCondition` 的评估操作出错（但结果都不是 FALSE）：
         - 如果 `failurePolicy=Fail`，则拒绝该请求；
         - 如果 `failurePolicy=Ignore`，则忽略此策略。
    items:
      $ref: '#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchCondition'
    maxItems: 64
    minItems: 0
    type: array
    x-kubernetes-list-map-keys:
      - name
    x-kubernetes-list-type: map
    x-kubernetes-patch-merge-key: name
    x-kubernetes-patch-strategy: merge
  matchConstraints:
    $ref: '#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchResources'
    description: |-
      `matchConstraints` specifies what resources this policy is designed to validate.
      The MutatingAdmissionPolicy cares about a request if it matches _all_ Constraints.
      However, in order to prevent clusters from being put into an unstable state that cannot be recovered from
      via the API MutatingAdmissionPolicy cannot match MutatingAdmissionPolicy and MutatingAdmissionPolicyBinding.
      The CREATE, UPDATE and CONNECT operations are allowed.
      The DELETE operation may not be matched. '*' matches CREATE, UPDATE and CONNECT.
    x-kab-description-zh: |-
      `matchConstraints` 用来指定此准入策略将用来检查的资源。
      如果某个请求与**所有**约束都匹配，则表明此 MutatingAdmissionPolicy 适用于该请求。
      不过，为了避免将集群带入某种无法通过 API 来恢复的不稳定状态，MutatingAdmissionPolicy 不能用来匹配
      MutatingAdmissionPolicy 和 MutatingAdmissionPolicyBinding 资源。
      准入策略可以用来匹配 CREATE、UPDATE 和 CONNECT 操作，但不能用来匹配 DELETE 操作。
      `"*"` 可用来匹配 CREATE、UPDATE 和 CONNECT 操作。
  mutations:
    description: |-
      `mutations` contain operations to perform on matching objects.
      `mutations` are evaluated in order, and are reinvoked according to the `reinvocationPolicy`.
      The `mutations` of a policy are invoked for each binding of this policy and reinvocation of
      mutations occurs on a per binding basis.
    x-kab-description-zh: |-
      `mutations` 包含要对匹配对象执行的操作。
      `mutations` 是按顺序被调用的，并且会根据 `reinvocationPolicy` 的设置来决定是否、如何重新调用。
      针对给定准入策略的所有绑定，该准入策略的 `mutations` 都会被调用一次。
      是否以及如何重新调用的决定是依据每个绑定单独作出的。
    items:
      $ref: '#/definitions/io.k8s.api.admissionregistration.v1alpha1.Mutation'
    minItems: 1
    type: array
    x-kubernetes-list-type: atomic
  paramKind:
    $ref: '#/definitions/io.k8s.api.admissionregistration.v1alpha1.ParamKind'
    description: |-
      `paramKind` specifies the kind of resources used to parameterize this policy.
      If absent, there are no parameters for this policy and the `param` CEL variable will not be provided to validation expressions.
      If `paramKind` refers to a non-existent kind, this policy definition is mis-configured and the `failurePolicy` is applied.
      If `paramKind` is specified but `paramRef` is unset in MutatingAdmissionPolicyBinding, the `params` variable will be null.
    x-kab-description-zh: |-
      `paramKind` 设置用来对此准入策略进行参数化的资源的类别。
      如果没有设置此字段，则此准入策略没有参数，无法使用 CEL 的 `param` 参数来对表达式作合法性检查。
      如果 `paramKind` 指向一个不存在的资源类别，则认为此准入策略的配置是错误的，系统将根据 `failurePolicy` 的设置进行处理。
      如果 `paramKind` 设置了，但 MutatingAdmissionPolicyBinding 中的 `paramRef` 没有设置，则 CEL 的 `params` 变量值为 null。
  reinvocationPolicy:
    description: |-
      `reinvocationPolicy` indicates whether `mutations` may be called multiple times per MutatingAdmissionPolicyBinding
      as part of a single admission evaluation.

     - `"Never"`: These `mutations` will not be called more than once per binding in a single admission evaluation.
     - `"IfNeeded"`: These `mutations` may be invoked more than once per binding for a single admission request and
       there is no guarantee of order with respect to other admission plugins, admission webhooks,
       bindings of this policy and admission policies.
       Mutations are only reinvoked when mutations change the object after this mutation is invoked.
    x-kab-description-zh: |-
      `reinvocationPolicy` 表明在一次准入处理过程中是否可以针对每个 MutatingAdmissionPolicyBinding 多次调用策略中的 `mutations`。

     - `"Never"`：在一次准入处理过程中，针对每个绑定，不会多次调用 `mutations`；
     - `"IfNeeded"`：在一次准入处理过程中，针对每个绑定，可以多次调用策略中的 `mutations`。
       在此准入策略、其他准入插件、准入 Webhook、此策略的各个绑定以及其他准入策略之间，
       系统不提供与调用顺序有关的保证。
       只有此策略处理完请求对象后其他组件或机制再次改变请求对象时，此策略的 `mutations` 才有可能被再次调用。
    type: string
  variables:
    description: |-
      `variables` contain definitions of variables that can be used in composition of other expressions.
      Each variable is defined as a named CEL expression. The `variables` defined here will be available
      under `variables` in other expressions of the policy except `matchConditions` because `matchConditions`
      are evaluated before the rest of the policy.

      The expression of a variable can refer to other `variables` defined earlier in the list but not those after.
      Thus,` variables` must be sorted by the order of first appearance and acyclic.
    x-kab-description-zh: |-
      `variables` 包含一些变量定义，所给的变量可用来构造其他表达式。此列表中的每个变量都可以定义为一个 CEL 表达式。
      此处所定义的 `variables` 可以在策略的其他表达式中用 `variables` 变量来访问，除了 `matchConditions`。
      存在这一限制是因为 `matchConditions` 的处理是先于准入策略中的其他部分的。

      一个变量的表达式可以引用列表中前面已经定义的 `variables` 条目，但不能引用列表中后面才出现的条目。
      所以，`variables` 必须按出现的先后顺序排序处理，并且相互引用之间不能存在环。
    items:
      $ref: '#/definitions/io.k8s.api.admissionregistration.v1alpha1.Variable'
    type: array
    x-kubernetes-list-type: atomic
required:
  - matchConstraints
  - reinvocationPolicy
type: object

