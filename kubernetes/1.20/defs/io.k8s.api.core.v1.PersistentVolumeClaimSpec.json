{
  "description": "The common attributes and the provider-specific attributes of storage devices",
  "properties": {
    "accessModes": {
      "description": "The desired access modes of the volume",
      "items": {
        "enum": [
          "ReadOnlyMany",
          "ReadWriteMany",
          "ReadWriteOnce"
        ],
        "type": "string"
      },
      "minItems": 1,
      "type": "array"
    },
    "dataSource": {
      "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference",
      "description": "This field can be used to specify either:\n\n* An existing `VolumeSnapshot` object (`snapshot.storage.k8s.io/VolumeSnapshot` - Beta)\n* An existing PVC (`PersistentVolumeClaim`)\n* An existing custom resource/object that implements data population (Alpha)\n\nIn order to use custom resource types that implement data population, the `AnyVolumeDataSource` feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source."
    },
    "resources": {
      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements",
      "description": "The minimum resources the volume should have. The `requests.storage` must be specified."
    },
    "selector": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "A label query over volumes to be considered for binding."
    },
    "storageClassName": {
      "description": "Name of the StorageClass required by the claim. The name must be a valid DNS subdomain.",
      "type": "string"
    },
    "volumeMode": {
      "default": "filesystem",
      "description": "Type of volume required by the claim.",
      "enum": [
        "block",
        "filesytem"
      ],
      "type": "string"
    },
    "volumeName": {
      "description": "The binding reference to the PersistentVolume backing this claim.",
      "type": "string"
    }
  },
  "required": [
    "accessModes",
    "resources"
  ],
  "type": "object"
}
