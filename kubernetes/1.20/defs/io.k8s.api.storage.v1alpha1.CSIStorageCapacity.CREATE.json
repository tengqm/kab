{
  "description": "CSIStorageCapacity stores the result of one CSI `GetCapacity()` call. For a given StorageClass, this describes the available capacity in a particular topology segment. This can be used when considering where to instantiate new PersistentVolumes.\n\nFor example this can express things like:\n\n- StorageClass `\"standard\"` has `\"1234 GiB\"` available in `\"topology.kubernetes.io/zone=us-east1\"`\n- StorageClass `\"localssd\"` has `\"10 GiB\"` available in `\"kubernetes.io/hostname=knode-abc123\"`\n\nThe following three cases all imply that no capacity is available for a certain combination:\n\n- no object exists with suitable topology and storage class name\n- such an object exists, but the capacity is unset\n- such an object exists, but the capacity is zero\n\nThe producer of these objects can decide which approach is more suitable.\n\nThis is an alpha feature and only available when the `CSIStorageCapacity` feature gate is enabled.",
  "properties": {
    "apiVersion": {
      "description": "The version of the schema for the object representation",
      "enum": [
        "storage.k8s.io/v1alpha1"
      ],
      "type": "string"
    },
    "capacity": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
      "description": "The value reported by the CSI driver in its `GetCapacityResponse` for a `GetCapacityRequest` with topology and parameters that match the previous fields. The semantic is currently (CSI spec 1.2) defined as: The available capacity, in bytes, of the storage that can be used to provision volumes. If not set, that information is currently unavailable and treated like zero capacity."
    },
    "kind": {
      "description": "A string value representing the REST resource",
      "enum": [
        "CSIStorageCapacity"
      ],
      "type": "string"
    },
    "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.CREATE",
      "description": "Standard object metadata. The `name` has no particular meaning. It must be be a DNS subdomain (dots allowed, 253 characters). To ensure that there are no conflicts with other CSI drivers on the cluster, the recommendation is to use `\"csisc-<uuid>\"`, a generated name, or a reverse-domain name which ends with the unique CSI driver name. Objects are namespaced."
    },
    "nodeTopology": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "This defines which nodes have access to the storage for which capacity was reported. If not set, the storage is not accessible from any node in the cluster. If empty, the storage is accessible from all nodes. This field is immutable."
    },
    "storageClassName": {
      "description": "The name of the StorageClass that the reported capacity applies to. It must meet the same requirements as the name of a StorageClass object (non-empty, DNS subdomain). If that object no longer exists, the CSIStorageCapacity object is obsolete and should be removed by its creator. This field is immutable.",
      "type": "string"
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "metadata",
    "storageClassName"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "storage.k8s.io",
      "kind": "CSIStorageCapacity",
      "version": "v1alpha1"
    }
  ]
}
