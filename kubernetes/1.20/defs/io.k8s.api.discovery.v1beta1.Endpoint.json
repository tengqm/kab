{
  "description": "A logical backend implementing a Service.",
  "properties": {
    "addresses": {
      "description": "Addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice `addressType` field. This allows for cases like dual-stack (IPv4 and IPv6) networking. Consumers (e.g. `kube-proxy`) must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.",
      "items": {
        "type": "string"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array",
      "x-kubernetes-list-type": "set"
    },
    "conditions": {
      "$ref": "#/definitions/io.k8s.api.discovery.v1beta1.EndpointConditions",
      "description": "Information about the current status of the Endpoint."
    },
    "hostname": {
      "description": "The hostname of this Endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same `hostname` should be considered fungible (e.g. multiple A values in DNS). Must be a valid DNS label (RFC 1123).",
      "type": "string"
    },
    "targetRef": {
      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
      "description": "A reference to a Kubernetes object that represents this endpoint."
    },
    "topology": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Arbitrary topology information associated with the endpoint. These key/value pairs must conform with the [label format](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels). Topology may include a maximum of 16 key/value pairs. This includes, but is not limited to the following well known keys:\n\n- `kubernetes.io/hostname`: the hostname of the node where the endpoint is located. This should match the corresponding node label.\n- `topology.kubernetes.io/zone`: the zone where the endpoint is located. This should match the corresponding node label.\n- `topology.kubernetes.io/region`: the region where the endpoint is located. This should match the corresponding node label.\n",
      "type": "object"
    }
  },
  "required": [
    "addresses"
  ],
  "type": "object"
}
