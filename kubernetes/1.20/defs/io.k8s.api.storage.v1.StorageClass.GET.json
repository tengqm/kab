{
  "description": "The parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.",
  "properties": {
    "allowVolumeExpansion": {
      "description": "Flag indicating whether the storage class allows volume expand",
      "type": "boolean"
    },
    "allowedTopologies": {
      "description": "Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty list means there is no topology restriction. This field is only honored by servers that enable the `VolumeScheduling` feature.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorTerm"
      },
      "type": "array"
    },
    "apiVersion": {
      "description": "The version of the schema for the object representation",
      "enum": [
        "storage.k8s.io/v1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "A string value representing the REST resource",
      "enum": [
        "StorageClass"
      ],
      "type": "string"
    },
    "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.GET",
      "description": "Standard object metadata"
    },
    "mountOptions": {
      "description": "Dynamically provisioned PersistentVolumes of this storage class are created with these mount options, e.g. ['`ro`', '`soft`']. Not validated - mount of the PVs will simply fail if an option is invalid.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "parameters": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "The parameters for the provisioner that creates volumes of this storage class.",
      "type": "object"
    },
    "provisioner": {
      "description": "The type of the provisioner.",
      "minLength": 1,
      "type": "string"
    },
    "reclaimPolicy": {
      "default": "Delete",
      "description": "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaim policy.",
      "enum": [
        "Delete",
        "Retain"
      ],
      "type": "string"
    },
    "volumeBindingMode": {
      "default": "Immediate",
      "description": "How PersistentVolumeClaims should be provisioned and bound. This field is only honored by servers that enable the `VolumeScheduling` feature.",
      "enum": [
        "Immediate",
        "WaitingForFirstConsumer"
      ],
      "type": "string"
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "provisioner"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "storage.k8s.io",
      "kind": "StorageClass",
      "version": "v1"
    }
  ]
}
