{
  "description": "This associates a path with a backend. Incoming URLs matching the `path` are forwarded to the `backend`.",
  "properties": {
    "backend": {
      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend",
      "description": "The referenced service endpoint to which the traffic will be forwarded to."
    },
    "path": {
      "description": "The path to match against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a \"`/`\". When unspecified, all paths from incoming requests are matched.",
      "type": "string"
    },
    "pathType": {
      "description": "This determines the interpretation of the `path` matching. `pathType` can be one of the following values.\n\n- \"`Exact`\": matches the URL path exactly.\n- \"`Prefix`\": matches based on a URL path prefix split by \"`/`\". Matching is done on a path element by element basis. A path element is the list of labels in the path split by the \"`/`\" separator. A request is a match for path \"p\" if every \"p\" is an element-wise prefix of \"p\" of the request path. Note that if the last element of the path is a substring of the last element in request path, it is not a match (e.g. \"/foo/bar\" matches \"/foo/bar/baz\", but does not match \"/foo/barbaz\").\n- \"`ImplementationSpecific`\": the interpretation of the `path` matching is up to the `IngressClass`. Implementations can treat this as a separate path type or treat it identically to \"`Prefix`\" or \"`Exact`\" path types.\n\nImplementations are required to support all path types.",
      "enum": [
        "Exact",
        "Prefix",
        "ImplementationSpecific"
      ],
      "type": "string"
    }
  },
  "required": [
    "backend"
  ],
  "type": "object"
}
