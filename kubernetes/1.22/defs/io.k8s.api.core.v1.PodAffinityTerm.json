{
  "description": "A set of Pods (namely those matching the `labelSelector` relative to the given namespace(s)) that this Pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key `topologyKey` matches that of any node on which a Pod of the set of Pods is running",
  "properties": {
    "labelSelector": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "A label query over a set of Pods."
    },
    "namespaceSelector": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
      "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the `namespaces` field. null selector and null or empty `namespaces` list means \"this Pod's namespace\". An empty selector (`{}`) matches all namespaces. This field is Alpha level and is only honored when the `\"PodAffinityNamespaceSelector\"` feature gate is enabled."
    },
    "namespaces": {
      "description": "A static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by `namespaceSelector`. null or empty namespaces list and null `namespaceSelector` means \"this Pod's namespace\"",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "topologyKey": {
      "description": "This Pod should be co-located (affinity) or not co-located (anti-affinity) with the Pods matching the `labelSelector` in the specified namespaces, where co-located is defined as running on a node whose value of the label with key `topologyKey` matches that of any node on which any of the selected Pods is running. Empty `topologyKey` is not allowed.",
      "minLength": 1,
      "type": "string"
    }
  },
  "required": [
    "topologyKey"
  ],
  "type": "object"
}
