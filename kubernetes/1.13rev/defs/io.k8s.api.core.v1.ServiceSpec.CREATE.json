{
  "description": "The attributes that a user creates on a service.",
  "properties": {
    "clusterIP": {
      "description": "The IP address of the service and is usually assigned randomly. If an IP address is specified manually and the IP is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field cannot be changed through updates. Valid values are '`None`', empty string (''), or a valid IP address. '`None`' can be specified for headless services when proxying is not required. Only applies to types '`ClusterIP`', '`NodePort`', and '`LoadBalancer`'. The value must be empty string if `type` is '`ExternalName`'. The value cannot be '`None`' for  `LoadBalancer` or `NodePort` type of services.",
      "type": "string"
    },
    "externalIPs": {
      "description": "A list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. A common example is external load-balancers that are not part of the Kubernetes system. The IP address provided cannot be '`0.0.0.0`' or loopback addresses ('`127.0.0.0/8`') or link-local addresses ('`169.254.0.0/16`' or '`244.0.0.0/24`').",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "externalName": {
      "description": "The external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123), a valid DNS subdomain and requires `type` to be '`ExternalName`'. Having a trailing dot is acceptable.",
      "type": "string"
    },
    "externalTrafficPolicy": {
      "description": "This denotes if this service desires to route external traffic to node-local or cluster-wide endpoints. '`Local`' preserves the client source IP and avoids a second hop for `LoadBalancer` and `Nodeport` type of services, but risks potentially imbalanced traffic spreading. '`Cluster`' obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.",
      "enum": [
        "Cluster",
        "Local"
      ],
      "type": "string"
    },
    "healthCheckNodePort": {
      "description": "The healthcheck node port for the service. If not specified, it is created by the service API backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when `type` is set to '`LoadBalancer`' and `externalTrafficPolicy` is set to '`Local`'.",
      "format": "int32",
      "minimum": 0,
      "type": "integer"
    },
    "loadBalancerIP": {
      "description": "Only applies to `LoadBalancer` type of services. A load balancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the load balancer IP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
      "type": "string"
    },
    "loadBalancerSourceRanges": {
      "description": "Only applies to `LoadBalancer` type of services. If specified and supported by the platform, traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. Every entry must be a valid CIDR expression. This field will be ignored if the cloud-provider does not support the feature.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "ports": {
      "description": "The list of ports that are exposed by this service. Required when service is not headless service and it is not of type `ExternalName`.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
      },
      "type": "array",
      "x-kubernetes-patch-merge-key": "port",
      "x-kubernetes-patch-strategy": "merge"
    },
    "publishNotReadyAddresses": {
      "default": false,
      "description": "When set to true, indicates that DNS implementations must publish the `notReadyAddresses` of subsets for the endpoints associated with the service. The primary use case for setting this field is to use a StatefulSet's headless service to propagate SRV records for its pods without respect to their readiness for purpose of peer discovery.",
      "type": "boolean"
    },
    "selector": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Service traffic will be routed to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types '`ClusterIP`', '`NodePort`', and '`LoadBalancer`'. Ignored if `type` is '`ExternalName`'.",
      "type": "object"
    },
    "sessionAffinity": {
      "default": "None",
      "description": "Used to maintain session affinity. Setting this to '`ClientIP`' enables client IP based session affinity.",
      "enum": [
        "ClientIP",
        "None"
      ],
      "type": "string"
    },
    "sessionAffinityConfig": {
      "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig",
      "description": "The configurations of session affinity. It is required when `sessionAffinity` is set to '`ClientIP`' and it cannot be set when `sessionAffinity` is set to '`None`'."
    },
    "type": {
      "default": "ClusterIP",
      "description": "This field determines how the service is exposed. '`ExternalName`' maps to the specified `externalName`. '`ClusterIP`' allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If `clusterIP` is '`None`', no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. '`NodePort`' builds on '`ClusterIP`' and allocates a port on every node which routes to the cluster IP. '`LoadBalancer`' builds on '`NodePort`' and creates an external load-balancer (if supported in the current cloud) which routes to the cluster IP.",
      "enum": [
        "ClusterIP",
        "ExternalName",
        "LoadBalancer",
        "NodePort"
      ],
      "type": "string"
    }
  },
  "type": "object"
}