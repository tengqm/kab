{
  "description": "The information for making a TLS connection with the webhook. Either `service` or `url` must be specified, but not both.",
  "properties": {
    "caBundle": {
      "description": "A PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
      "format": "byte",
      "type": "string"
    },
    "service": {
      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ServiceReference",
      "description": "A reference to the Service for this webhook. If the webhook is running within the cluster, then you should use `service`. The `name`, `namespace` fields are required. The `port`, if specified, must be an integer between 1 and 65535, inclusive. The `path`, if specified, must start with a \"/\" and it cannot be \"//\". Each path segment must be a valid DNS subdomain name."
    },
    "url": {
      "description": "The location of the webhook in standard URL form (`\"https://host[:port][/path]\"`). The `\"host\"` is required and it should not refer to a Service running in the cluster; use the `service` field instead.\n\nThe `\"host\"` might be resolved via external DNS in some API servers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `\"host\"` may also be an IP address.\n\nPlease note that using `\"localhost\"` or `\"127.0.0.1\"` as a `\"host\"` is risky unless you take great care to run this webhook on all hosts which run an API server which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be `\"https\"`.\n\nA `\"path\"` is optional, and if present may be any string permissible in a URL. You may use the `\"path\"` to pass an arbitrary string to the webhook, for example, a cluster identifier. Attempting to use a user or basic auth e.g. `\"user:password@\"` is not allowed. Fragments (`\"#...\"`) and query parameters (`\"?...\"`) are not allowed either.",
      "type": "string"
    }
  },
  "type": "object"
}
