{
  "description": "The desired state of the Ingress. At least one of `backend` or `rules` must be specified.",
  "properties": {
    "backend": {
      "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressBackend",
      "description": "A default backend capable of servicing requests that don't match any rule. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default."
    },
    "ingressClassName": {
      "description": "The name of the `IngressClass` cluster resource. The associated `IngressClass` defines which controller will implement the resource. This replaces the deprecated `kubernetes.io/ingress.class` annotation. For backwards compatibility, when that annotation is set, this field cannot be set. Implementations of this API should ignore `Ingress`es without a class specified. An `IngressClass` resource may be marked as default, which can be used to set a default value for this field. For more information, refer to the `IngressClass` documentation. The name must be a valid DNS subdomain name if specified.",
      "type": "string"
    },
    "rules": {
      "description": "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressRule"
      },
      "type": "array"
    },
    "tls": {
      "description": "TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressTLS"
      },
      "type": "array"
    }
  },
  "type": "object"
}
