{
  "description": "Pod is a collection of Containers that can run on a host.",
  "properties": {
    "apiVersion": {
      "description": "The version of the schema for the object representation",
      "enum": [
        "v1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "A string value representing the REST resource",
      "enum": [
        "Pod"
      ],
      "type": "string"
    },
    "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.CREATE",
      "description": "Standard object metadata. The name must be a valid DNS subdomain name. There are some special requirements for the `annotations` for a Pod:\n\n- The kubelet sets the annotation key `\"kubernetes.io/config.mirror\"` when creating mirror Pods. For mirror Pods, the `spec.nodeName` cannot be empty.\n- The Pod can have `\"scheduler.alpha.kubernetes.io/tolerations\"` annotation set to a serialized JSON data to represent its tolerations. The API server validates if the unmarshaled JSON is a valid `Toleration` object.\n- The Pod can have `\"seccomp.security.alpha.kubernetes.io/pod\"` annotation set to the seccomp profile that is applied to all containers in the Pod. This annotation is deprecated by the `securityContext.seccompProfile` field. This annotation, when specified, is cross verified against the `securityContext.seccompProfile` of the Pod and the `securityContext.seccompProfile` of all containers.\n- The Pod can have annotation keys prefixed with `\"container.seccomp.security.alpha.kubernetes.io/\"`. These annoations are deprecated by the `seccompProfile` field on the container's `securityContext`.\n - The Pod can have annotation keys prefixed with `\"container.apparmor.security.beta.kubernetes.io/\"` for specifying per-container AppArmor profile.\n"
    },
    "spec": {
      "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec.CREATE",
      "description": "Specification of the desired behavior of the Pod."
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "metadata",
    "spec"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "",
      "kind": "Pod",
      "version": "v1"
    }
  ]
}
