{
  "description": "The current status of a Job.",
  "properties": {
    "active": {
      "description": "The number of pending and running Pods.",
      "format": "int32",
      "minimum": 0,
      "type": "integer"
    },
    "completedIndexes": {
      "description": "This holds the completed indexes when `.spec.completionMode=\"Indexed\"` in a text format. The indexes are represented as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\".",
      "type": "string"
    },
    "completionTime": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
      "description": "Time when the Job was completed. It is not guaranteed to be set in *happens-before* order across separate operations. It is represented in RFC3339 form and is in UTC. The completion time is only set when the Job finishes successfully."
    },
    "conditions": {
      "description": "The latest available observations of an object's current state. When a Job fails, one of the conditions will have `type` set to `\"Failed\"`. When a Job is suspended, one of the conditions will have `type` \"Suspended\" and `status` true; when the Job is resumed, the status of this condition will become `false`. When a Job is completed, one of the conditions will have type \"Complete\" and `status` true.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.batch.v1.JobCondition"
      },
      "type": "array",
      "x-kubernetes-list-type": "atomic",
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
    },
    "failed": {
      "description": "The number of Pods which reached phase `\"Failed\"`.",
      "format": "int32",
      "minimum": 0,
      "type": "integer"
    },
    "failedIndexes": {
      "description": "This holds the failed indexes when `backoffLimitPerIndex=true`. The indexes are represented in the text format analogous as for the `completedIndexes` field, ie. they are kept as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the failed indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\". This field is Alpha-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (disabled by default).",
      "type": "string"
    },
    "ready": {
      "description": "The number of Pods which have a Ready condition.\n\nThis field is Beta-level. The Job controller populates the field when the feature gate `JobReadyPods` is enabled (enabled by default).",
      "format": "int32",
      "minimum": 0,
      "type": "integer"
    },
    "startTime": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
      "description": "The time when the Job controller started processing a Job. When a Job is created in the suspended state, this field is not set until the first time it is resumed. This field is reset every time a Job is resumed from suspension. It is represented in RFC3339 form and is in UTC."
    },
    "succeeded": {
      "description": "The number of Pods which reached phase `\"Succeeded\"`.",
      "format": "int32",
      "minimum": 0,
      "type": "integer"
    },
    "terminating": {
      "description": "The number of Pods which are terminating (in phase \"Pending\" or \"Running\" and have a `deletionTimestamp`).\n\nThis field is Alpha-level. The Job controller populates the field when the feature gate `JobPodReplacementPolicy` is enabled (disabled by default).",
      "format": "int32",
      "minimum": 0,
      "type": "integer"
    },
    "uncountedTerminatedPods": {
      "$ref": "#/definitions/io.k8s.api.batch.v1.UncountedTerminatedPods",
      "description": "This contains the UIDs of Pods that have terminated but the Job controller hasn't yet accounted for in the status counters.\n\nThe Job controller creates Pods with a finalizer. When a Pod terminates (`Succeeded` or `Failed`), the controller does three steps to account for it in the Job status: (1) Add the Pod UID to the arrays in this field. (2) Remove the Pod finalizer. (3) Remove the Pod UID from the arrays while increasing the corresponding counter.\n\n Old Jobs might not be tracked using this field, in which case the field remains null."
    }
  },
  "type": "object"
}
