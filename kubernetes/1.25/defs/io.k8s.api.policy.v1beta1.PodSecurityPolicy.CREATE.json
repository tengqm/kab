{
  "description": "PodSecurityPolicy governs the ability to make requests that affect the security context that will be applied to a Pod and container. DEPRECATED in 1.21.",
  "properties": {
    "apiVersion": {
      "description": "The version of the schema for the object representation",
      "enum": [
        "policy/v1beta1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "A string value representing the REST resource",
      "enum": [
        "PodSecurityPolicy"
      ],
      "type": "string"
    },
    "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.CREATE",
      "description": "Standard object metadata. The name must be a valid DNS subdomain name.\n\nUser can specify the default AppArmor profile to use, if allowed, using the `\"apparmor.security.beta.kubernetes.io/defaultProfileName\"` annotation. The *default* profile specified must be `\"runtime/default\"` or `\"unconfined\"` or have a prefix `\"localhost/\"`. User can specify the allowed AppArmor profile to use, if allowed, using the `\"apparmor.security.beta.kubernetes.io/allowedProfileNames\"`. The annotation value is a comma separated list of profile names, each of which is either `\"runtime/default\"`, `\"unconfined\"`, or prefixed with `\"localhost/\"`.\n\nSimilarly, users can specify the default profile for seccomp, if enabled, using the `\"seccomp.security.alpha.kubernetes.io/defaultProfileName\"` annotation and the allowed profiles using the `\"seccomp.security.alpha.kubernetes.io/allowedProfileNames\"` annotation. The value for allowed profiles can contain `\"*\"` which means allowing all profiles. The value of `\"runtime/default\"`, `\"docker/default\"` and `\"unconfined\"` is acceptable, in addition to profiles names prefixed with `\"localhost/\"`."
    },
    "spec": {
      "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicySpec",
      "description": "The policy to enforce."
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "metadata"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "policy",
      "kind": "PodSecurityPolicy",
      "version": "v1beta1"
    }
  ]
}
