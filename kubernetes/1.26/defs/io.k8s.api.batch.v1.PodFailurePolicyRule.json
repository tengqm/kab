{
  "description": "PodFailurePolicyRule describes how a Pod failure is handled when the requirements are met. One of `onExitCodes` and `onPodConditions`, but not both, can be used in each rule.",
  "properties": {
    "action": {
      "description": "This specifies the action taken on a Pod failure when the requirements are satisfied. Possible values are:\n\n- \"FailJob\": indicates that the Pod's job is marked as `Failed` and all running Pods are terminated.\n- \"Ignore\": indicates that the counter towards the `.backoffLimit` is not incremented and a replacement Pod is created.\n- \"Count\": indicates that the Pod is handled in the default way - the counter towards the `.backoffLimit` is incremented.\n\nAdditional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule.",
      "enum": [
          "Count",
          "FailedJob",
          "Ignore"
      ],
      "type": "string"
    },
    "onExitCodes": {
      "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement",
      "description": "Represents the requirement on the container exit codes."
    },
    "onPodConditions": {
      "description": "Represents the requirement on the Pod conditions. The requirement is represented as a list of Pod condition patterns. The requirement is satisfied if at least one pattern matches an actual Pod condition.",
      "items": {
        "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern"
      },
      "maxItems": 20,
      "type": "array",
      "x-kubernetes-list-type": "atomic"
    }
  },
  "required": [
    "action"
  ],
  "type": "object"
}
