{
  "description": "CustomResourceDefinitionSpec describes how a user wants their resource to appear",
  "required": [
    "group",
    "names",
    "scope"
  ],
  "properties": {
    "additionalPrinterColumns": {
      "description": "AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column. Optional, the global columns for all versions. Top-level and per-version columns are mutually exclusive.",
      "type": "array",
      "items": {
        "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
        "required": [
          "name",
          "type",
          "JSONPath"
        ],
        "properties": {
          "JSONPath": {
            "description": "JSONPath is a simple JSON path, i.e. with array notation.",
            "type": "string"
          },
          "description": {
            "description": "description is a human readable description of this column.",
            "type": "string"
          },
          "format": {
            "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
            "type": "string"
          },
          "name": {
            "description": "name is a human readable name for the column.",
            "type": "string"
          },
          "priority": {
            "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
            "type": "string"
          }
        }
      }
    },
    "conversion": {
      "description": "CustomResourceConversion describes how to convert different versions of a CR.",
      "required": [
        "strategy"
      ],
      "properties": {
        "strategy": {
          "description": "`strategy` specifies the conversion strategy. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the CR. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information is needed for this option.",
          "type": "string"
        },
        "webhookClientConfig": {
          "description": "WebhookClientConfig contains the information to make a TLS connection with the webhook. It has the same field as admissionregistration.v1beta1.WebhookClientConfig.",
          "properties": {
            "caBundle": {
              "description": "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
              "type": "string",
              "format": "byte"
            },
            "service": {
              "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
              "required": [
                "namespace",
                "name"
              ],
              "properties": {
                "name": {
                  "description": "`name` is the name of the service. Required",
                  "type": "string"
                },
                "namespace": {
                  "description": "`namespace` is the namespace of the service. Required",
                  "type": "string"
                },
                "path": {
                  "description": "`path` is an optional URL path which will be sent in any request to this service.",
                  "type": "string"
                }
              }
            },
            "url": {
              "description": "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
              "type": "string"
            }
          }
        }
      }
    },
    "group": {
      "description": "Group is the group this resource belongs in",
      "type": "string"
    },
    "names": {
      "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
      "required": [
        "plural",
        "kind"
      ],
      "properties": {
        "categories": {
          "description": "Categories is a list of grouped resources custom resources belong to (e.g. 'all')",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
          "type": "string"
        },
        "listKind": {
          "description": "ListKind is the serialized kind of the list for this resource.  Defaults to <kind>List.",
          "type": "string"
        },
        "plural": {
          "description": "Plural is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
          "type": "string"
        },
        "shortNames": {
          "description": "ShortNames are short names for the resource.  It must be all lowercase.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "singular": {
          "description": "Singular is the singular name of the resource.  It must be all lowercase  Defaults to lowercased <kind>",
          "type": "string"
        }
      }
    },
    "scope": {
      "description": "Scope indicates whether this resource is cluster or namespace scoped.  Default is namespaced",
      "type": "string"
    },
    "subresources": {
      "description": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
      "properties": {
        "scale": {
          "description": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
          "required": [
            "specReplicasPath",
            "statusReplicasPath"
          ],
          "properties": {
            "labelSelectorPath": {
              "description": "LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the /scale subresource will default to the empty string.",
              "type": "string"
            },
            "specReplicasPath": {
              "description": "SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the /scale subresource will return an error on GET.",
              "type": "string"
            },
            "statusReplicasPath": {
              "description": "StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the /scale subresource will default to 0.",
              "type": "string"
            }
          }
        },
        "status": {
          "description": "CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza"
        }
      }
    },
    "validation": {
      "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
      "properties": {
        "openAPIV3Schema": {
          "description": "OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.",
          "type": "object"
        }
      }
    },
    "version": {
      "description": "Version is the version this resource belongs in Should be always first item in Versions field if provided. Optional, but at least one of Version or Versions must be set. Deprecated: Please use `Versions`.",
      "type": "string"
    },
    "versions": {
      "description": "Versions is the list of all supported versions for this resource. If Version field is provided, this field is optional. Validation: All versions must use the same validation schema for now. i.e., top level Validation field is applied to all of these versions. Order: The version name will be used to compute the order. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
      "type": "array",
      "items": {
        "description": "CustomResourceDefinitionVersion describes a version for CRD.",
        "required": [
          "name",
          "served",
          "storage"
        ],
        "properties": {
          "additionalPrinterColumns": {
            "description": "AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead) This field is alpha-level and is only honored by servers that enable the CustomResourceWebhookConversion feature. NOTE: CRDs created prior to 1.13 populated the top-level additionalPrinterColumns field by default. To apply an update that changes to per-version additionalPrinterColumns, the top-level additionalPrinterColumns field must be explicitly set to null",
            "type": "array",
            "items": {
              "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
              "required": [
                "name",
                "type",
                "JSONPath"
              ],
              "properties": {
                "JSONPath": {
                  "description": "JSONPath is a simple JSON path, i.e. with array notation.",
                  "type": "string"
                },
                "description": {
                  "description": "description is a human readable description of this column.",
                  "type": "string"
                },
                "format": {
                  "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                  "type": "string"
                },
                "name": {
                  "description": "name is a human readable name for the column.",
                  "type": "string"
                },
                "priority": {
                  "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                  "type": "integer",
                  "format": "int32"
                },
                "type": {
                  "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                  "type": "string"
                }
              }
            }
          },
          "name": {
            "description": "Name is the version name, e.g. \u201cv1\u201d, \u201cv2beta1\u201d, etc.",
            "type": "string"
          },
          "schema": {
            "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
            "properties": {
              "openAPIV3Schema": {
                "description": "OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.",
                "type": "object"
              }
            }
          },
          "served": {
            "description": "Served is a flag enabling/disabling this version from being served via REST APIs",
            "type": "boolean"
          },
          "storage": {
            "description": "Storage flags the version as storage version. There must be exactly one flagged as storage version.",
            "type": "boolean"
          },
          "subresources": {
            "description": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
            "properties": {
              "scale": {
                "description": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
                "required": [
                  "specReplicasPath",
                  "statusReplicasPath"
                ],
                "properties": {
                  "labelSelectorPath": {
                    "description": "LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the /scale subresource will default to the empty string.",
                    "type": "string"
                  },
                  "specReplicasPath": {
                    "description": "SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the /scale subresource will return an error on GET.",
                    "type": "string"
                  },
                  "statusReplicasPath": {
                    "description": "StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the /scale subresource will default to 0.",
                    "type": "string"
                  }
                }
              },
              "status": {
                "description": "CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza"
              }
            }
          }
        }
      }
    }
  }
}