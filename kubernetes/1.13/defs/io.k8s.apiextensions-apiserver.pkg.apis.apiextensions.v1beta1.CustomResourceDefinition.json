{
  "description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": "string"
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": "string",
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": "string",
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "initializers": {
          "description": "Initializers tracks the progress of initialization.",
          "required": [
            "pending"
          ],
          "properties": {
            "pending": {
              "description": "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
              "type": "array",
              "items": {
                "description": "Initializer is information about an initializer that has not yet completed.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "name of the process that is responsible for initializing this object.",
                    "type": "string"
                  }
                }
              },
              "x-kubernetes-patch-merge-key": "name",
              "x-kubernetes-patch-strategy": "merge"
            },
            "result": {
              "description": "Status is a return value for calls that don't return other objects.",
              "properties": {
                "apiVersion": {
                  "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                  "type": "string"
                },
                "code": {
                  "description": "Suggested HTTP return code for this status, 0 if not set.",
                  "type": "integer",
                  "format": "int32"
                },
                "details": {
                  "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
                  "properties": {
                    "causes": {
                      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
                      "type": "array",
                      "items": {
                        "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
                        "properties": {
                          "field": {
                            "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
                            "type": "string"
                          },
                          "message": {
                            "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
                            "type": "string"
                          },
                          "reason": {
                            "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "group": {
                      "description": "The group attribute of the resource associated with the status StatusReason.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
                      "type": "string"
                    },
                    "retryAfterSeconds": {
                      "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "uid": {
                      "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  }
                },
                "kind": {
                  "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "message": {
                  "description": "A human-readable description of the status of this operation.",
                  "type": "string"
                },
                "metadata": {
                  "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
                  "properties": {
                    "continue": {
                      "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                      "type": "string"
                    },
                    "selfLink": {
                      "description": "selfLink is a URL representing this object. Populated by the system. Read-only.",
                      "type": "string"
                    }
                  }
                },
                "reason": {
                  "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                  "type": "string"
                }
              },
              "x-kubernetes-group-version-kind": [
                {
                  "group": "",
                  "kind": "Status",
                  "version": "v1"
                }
              ]
            }
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": "boolean"
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": "boolean"
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": "string"
              }
            }
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "CustomResourceDefinitionSpec describes how a user wants their resource to appear",
      "required": [
        "group",
        "names",
        "scope"
      ],
      "properties": {
        "additionalPrinterColumns": {
          "description": "AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column. Optional, the global columns for all versions. Top-level and per-version columns are mutually exclusive.",
          "type": "array",
          "items": {
            "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
            "required": [
              "name",
              "type",
              "JSONPath"
            ],
            "properties": {
              "JSONPath": {
                "description": "JSONPath is a simple JSON path, i.e. with array notation.",
                "type": "string"
              },
              "description": {
                "description": "description is a human readable description of this column.",
                "type": "string"
              },
              "format": {
                "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                "type": "string"
              },
              "name": {
                "description": "name is a human readable name for the column.",
                "type": "string"
              },
              "priority": {
                "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                "type": "integer",
                "format": "int32"
              },
              "type": {
                "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                "type": "string"
              }
            }
          }
        },
        "conversion": {
          "description": "CustomResourceConversion describes how to convert different versions of a CR.",
          "required": [
            "strategy"
          ],
          "properties": {
            "strategy": {
              "description": "`strategy` specifies the conversion strategy. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the CR. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information is needed for this option.",
              "type": "string"
            },
            "webhookClientConfig": {
              "description": "WebhookClientConfig contains the information to make a TLS connection with the webhook. It has the same field as admissionregistration.v1beta1.WebhookClientConfig.",
              "properties": {
                "caBundle": {
                  "description": "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
                  "type": "string",
                  "format": "byte"
                },
                "service": {
                  "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
                  "required": [
                    "namespace",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "`name` is the name of the service. Required",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "`namespace` is the namespace of the service. Required",
                      "type": "string"
                    },
                    "path": {
                      "description": "`path` is an optional URL path which will be sent in any request to this service.",
                      "type": "string"
                    }
                  }
                },
                "url": {
                  "description": "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
                  "type": "string"
                }
              }
            }
          }
        },
        "group": {
          "description": "Group is the group this resource belongs in",
          "type": "string"
        },
        "names": {
          "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
          "required": [
            "plural",
            "kind"
          ],
          "properties": {
            "categories": {
              "description": "Categories is a list of grouped resources custom resources belong to (e.g. 'all')",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "kind": {
              "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
              "type": "string"
            },
            "listKind": {
              "description": "ListKind is the serialized kind of the list for this resource.  Defaults to <kind>List.",
              "type": "string"
            },
            "plural": {
              "description": "Plural is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
              "type": "string"
            },
            "shortNames": {
              "description": "ShortNames are short names for the resource.  It must be all lowercase.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "singular": {
              "description": "Singular is the singular name of the resource.  It must be all lowercase  Defaults to lowercased <kind>",
              "type": "string"
            }
          }
        },
        "scope": {
          "description": "Scope indicates whether this resource is cluster or namespace scoped.  Default is namespaced",
          "type": "string"
        },
        "subresources": {
          "description": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
          "properties": {
            "scale": {
              "description": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
              "required": [
                "specReplicasPath",
                "statusReplicasPath"
              ],
              "properties": {
                "labelSelectorPath": {
                  "description": "LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the /scale subresource will default to the empty string.",
                  "type": "string"
                },
                "specReplicasPath": {
                  "description": "SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the /scale subresource will return an error on GET.",
                  "type": "string"
                },
                "statusReplicasPath": {
                  "description": "StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the /scale subresource will default to 0.",
                  "type": "string"
                }
              }
            },
            "status": {
              "description": "CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza"
            }
          }
        },
        "validation": {
          "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
          "properties": {
            "openAPIV3Schema": {
              "description": "OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.",
              "type": "object"
            }
          }
        },
        "version": {
          "description": "Version is the version this resource belongs in Should be always first item in Versions field if provided. Optional, but at least one of Version or Versions must be set. Deprecated: Please use `Versions`.",
          "type": "string"
        },
        "versions": {
          "description": "Versions is the list of all supported versions for this resource. If Version field is provided, this field is optional. Validation: All versions must use the same validation schema for now. i.e., top level Validation field is applied to all of these versions. Order: The version name will be used to compute the order. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
          "type": "array",
          "items": {
            "description": "CustomResourceDefinitionVersion describes a version for CRD.",
            "required": [
              "name",
              "served",
              "storage"
            ],
            "properties": {
              "additionalPrinterColumns": {
                "description": "AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead) This field is alpha-level and is only honored by servers that enable the CustomResourceWebhookConversion feature. NOTE: CRDs created prior to 1.13 populated the top-level additionalPrinterColumns field by default. To apply an update that changes to per-version additionalPrinterColumns, the top-level additionalPrinterColumns field must be explicitly set to null",
                "type": "array",
                "items": {
                  "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
                  "required": [
                    "name",
                    "type",
                    "JSONPath"
                  ],
                  "properties": {
                    "JSONPath": {
                      "description": "JSONPath is a simple JSON path, i.e. with array notation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "description is a human readable description of this column.",
                      "type": "string"
                    },
                    "format": {
                      "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                      "type": "string"
                    },
                    "name": {
                      "description": "name is a human readable name for the column.",
                      "type": "string"
                    },
                    "priority": {
                      "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "type": {
                      "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                      "type": "string"
                    }
                  }
                }
              },
              "name": {
                "description": "Name is the version name, e.g. \u201cv1\u201d, \u201cv2beta1\u201d, etc.",
                "type": "string"
              },
              "schema": {
                "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
                "properties": {
                  "openAPIV3Schema": {
                    "description": "OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.",
                    "type": "object"
                  }
                }
              },
              "served": {
                "description": "Served is a flag enabling/disabling this version from being served via REST APIs",
                "type": "boolean"
              },
              "storage": {
                "description": "Storage flags the version as storage version. There must be exactly one flagged as storage version.",
                "type": "boolean"
              },
              "subresources": {
                "description": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
                "properties": {
                  "scale": {
                    "description": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
                    "required": [
                      "specReplicasPath",
                      "statusReplicasPath"
                    ],
                    "properties": {
                      "labelSelectorPath": {
                        "description": "LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the /scale subresource will default to the empty string.",
                        "type": "string"
                      },
                      "specReplicasPath": {
                        "description": "SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the /scale subresource will return an error on GET.",
                        "type": "string"
                      },
                      "statusReplicasPath": {
                        "description": "StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the /scale subresource will default to 0.",
                        "type": "string"
                      }
                    }
                  },
                  "status": {
                    "description": "CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza"
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition",
      "required": [
        "conditions",
        "acceptedNames",
        "storedVersions"
      ],
      "properties": {
        "acceptedNames": {
          "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
          "required": [
            "plural",
            "kind"
          ],
          "properties": {
            "categories": {
              "description": "Categories is a list of grouped resources custom resources belong to (e.g. 'all')",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "kind": {
              "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
              "type": "string"
            },
            "listKind": {
              "description": "ListKind is the serialized kind of the list for this resource.  Defaults to <kind>List.",
              "type": "string"
            },
            "plural": {
              "description": "Plural is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
              "type": "string"
            },
            "shortNames": {
              "description": "ShortNames are short names for the resource.  It must be all lowercase.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "singular": {
              "description": "Singular is the singular name of the resource.  It must be all lowercase  Defaults to lowercased <kind>",
              "type": "string"
            }
          }
        },
        "conditions": {
          "description": "Conditions indicate state for particular aspects of a CustomResourceDefinition",
          "type": "array",
          "items": {
            "description": "CustomResourceDefinitionCondition contains details for the current condition of this pod.",
            "required": [
              "type",
              "status"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            }
          }
        },
        "storedVersions": {
          "description": "StoredVersions are all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so the migration controller can first finish a migration to another version (i.e. that no old objects are left in the storage), and then remove the rest of the versions from this list. None of the versions in this list can be removed from the spec.Versions field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "apiextensions.k8s.io",
      "kind": "CustomResourceDefinition",
      "version": "v1beta1"
    }
  ]
}