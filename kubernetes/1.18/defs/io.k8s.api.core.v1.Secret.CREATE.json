{
  "description": "Secret holds secret data of a certain type. The total bytes of the values in the `data` or `stringData` field must be less than 1MB.",
  "properties": {
    "apiVersion": {
      "description": "The version of the schema for the object representation",
      "enum": [
        "v1"
      ],
      "type": "string"
    },
    "data": {
      "additionalProperties": {
        "format": "byte",
        "type": "string"
      },
      "description": "The secret data. Each key must consist of alphanumeric characters, `'-'`, `'_'` or `'.'`. The serialized form of the Secret data is a [base64](https://tools.ietf.org/html/rfc4648#section-4) encoded string, representing the arbitrary (possibly non-string) data value here.",
      "type": "object"
    },
    "immutable": {
      "description": "If set to `true`, ensures that data stored in the Secret cannot be updated (only `metadata` can be modified). If not set to `true`, the field can be modified at any time. Defaulted to nil. This is a Alpha field enabled by the `ImmutableEphemeralVolumes` feature gate.",
      "type": "boolean"
    },
    "kind": {
      "description": "A string value representing the REST resource",
      "enum": [
        "Secret"
      ],
      "type": "string"
    },
    "metadata": {
      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta.CREATE",
      "description": "Standard object metadata. The Secret name must be a valid DNS subdomain value. Note that some Secret types may have additional requirements on the `annotations` or assumptions on the Secret name."
    },
    "stringData": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "The `stringData` field allows for specifying non-binary Secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the `data` field on write, overwriting any existing values. It is never output when reading from the API.",
      "type": "object"
    },
    "type": {
      "default": "Opaque",
      "description": "Used to facilitate programmatic handling of secret data. The `type` field can take one of the following builtin values. You can add your own type as well.\n\n- `\"Opaque\"` (default): arbitrary user-defined data.\n- `\"kubernetes.io/service-account-token\"`: a token that identifies a service acccount. This type requires that the `\"kubernetes.io/service-account.name\"` annotation set to an existing service account name and the `data.token` field set to the token content.\n- `\"kubernetes.io/dockercfg\"`: reserved for a serialized `\"~/.dockercfg\"` file. This type requires that the `data` field contains a `.dockercfg` key for the config content.\n- `\"kubernetes.io/dockerconfigjson\"`: reserved for serialized JSON data that follows the same format rules as the `\"~/.docker/config.json\"` file. This type requires that the `data` field contains a `.dockerconfigjson` key for the config data.\n- `\"kubernetes.io/basic-auth\"`: a builtin type for storing credentials needed for basic authentication. This type requires the `data` field contains the `username` and `password` key for user name and password (or token) for authentication, respectively.\n- `\"kubernetes.io/ssh-auth\"`: reserved for data used in SSH authentication. This type requires that the `data` field contains a `ssh-privatekey` key as the SSH credential to use.\n- `\"kubernetes.io/tls\"`: reserved to store information about a TLS client or server. It is primarily used with TLS termination of the Ingress resource, but may be used in other types. This type requires the settings of the `tls.key` and the `tls.crt` keys in the `data` field, although the server doesn't actually validate the contents.\n- `\"bootstrap.kubernetes.io/token\"`: reserved for tokens used during the bootstrap process for a node. It stores tokens used to sign well known ConfigMaps. This type of a Secret is usually created in the `\"kube-system\"` namespace and named as `\"bootstrap-token-<token-id>\"`.\n\nA Secret of bootstrap token type has the following keys specified under `data`:\n\n- `\"token_id\"`: A random 6 character string as the token identifier. Required.\n- `\"token-secret\"`: A random 16 character string as the actual token secret. Required.\n- `\"description\"`: A human-readable string that describes what the token is used for. Optional.\n- `\"expiration\"`: An absolute UTC time using RFC3339 specifying when the token should be expired. Optional.\n- `\"usage-bootstrap-<usage>\"`: A boolean flag  indicating additional usage for the bootstrap token.\n- `\"auth-extra-groups\"`: A comma-separated list of group names that will be authenticated as in addition to `\"system:bootstrappers\"` group.\n\n",
      "enum": [
        "bootstrap.kubernetes.io/token",
        "kubernetes.io/service-account-token",
        "kubernetes.io/dockercfg",
        "kubernetes.io/dockerconfigjson",
        "kubernetes.io/basic-auth",
        "kubernetes.io/ssh-auth",
        "kubernetes.io/tls",
        "Opaque"
      ],
      "type": "string"
    }
  },
  "required": [
    "apiVersion",
    "kind",
    "metadata"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "",
      "kind": "Secret",
      "version": "v1"
    }
  ]
}
