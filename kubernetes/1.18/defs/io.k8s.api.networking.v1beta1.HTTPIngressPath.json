{
  "description": "A path regex with a backend. Incoming URLs matching the `path` are forwarded to the `backend`.",
  "properties": {
    "backend": {
      "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressBackend",
      "description": "The referenced service endpoint to which the traffic will be forwarded to."
    },
    "path": {
      "description": "The path to match against the path of an incoming request. Currently it can contain characters disallowed from the conventional 'path' part of a URL as defined by RFC 3986. Paths must begin with a '`/`'. When unspecified, all paths from incoming requests are matched.",
      "type": "string"
    },
    "pathType": {
      "default": "ImplementationSpecific",
      "description": "This determines the interpretation of the `path` matching. Path type can be one of the following values. '`Exact`' matches the URL path exactly. '`Prefix`' indicates matching based on a URL path prefix split by '`/`'. Matching is done on a path element by element basis. A path element refers is the list of labels in the path split by the '`/`' separator. A request is a match for path 'p' if every 'p' is an element-wise prefix of 'p' of the request path. Note that if the last element of the path is a substring of the last element in request path, it is not a match (e.g. '/foo/bar' matches '/foo/bar/baz', but does not match '/foo/barbaz'). '`ImplementationSpecific`' means the iinterpretation of the `path` matching is up to the `IngressClass`. Implementations can treat this as a separate path type or treat it identically to '`Prefix`' or '`Exact`' path types. Implementations are required to support all path types.",
      "enum": [
        "Exact",
        "Prefix",
        "ImplementationSpecific"
      ],
      "type": "string"
    }
  },
  "required": [
    "backend"
  ],
  "type": "object"
}
